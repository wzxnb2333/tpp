/***************************************************************************************************
		Convert from NINGEN		(b_head) 																
****************************************************************************************************/

#define SCALE 0.25
#define ShapeColor_b_head(R,G,B) {  {R*SCALE ,G*SCALE ,B*SCALE ,0 ,R*SCALE ,G*SCALE ,B*SCALE ,0 },{ R, G, B, 0, R, G, B, 0, LIGHT_X, LIGHT_Y, LIGHT_Z, 0} }

static Lights1 light_b_head[] = {
	ShapeColor_b_head( 99, 30, 15),
	ShapeColor_b_head(254,234, 38),
	ShapeColor_b_head( 77, 53, 46),
};

static unsigned short b_eye_txt[] = {
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0x0001,  0x0001,  0x0001,  0x0801,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xf778,  0x1001,  0x0001,  0x0001,  0x0001,  0xc5a8,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xb568,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x2001,  0xfffe,  0xfffe,  0xfffe,  0x0001,  0x0001,  0x0001,  0x3041,  0x3081,  0x0801,  0x0001,  0x0001,  0x9c5e,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0x0001,  0x0001,  0x0801,  0x38c1,  0x4101,  0x38c1,  0xa45b,  0x3041,  0x0001,  0x1801,  0xfffe,  0x4941,  0x0001,  0x4101,  0x4943,  0x4101,  0x4103,  0x4943,  0xa45b,  0x1001,  0x0001,  0x4142,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0x941c,  0x0001,  0x0001,  0x38c1,  0x5183,  0x4103,  0x3901,  0x3901,  0xa45b,  0xa45b,  0x4943,  0x0001,  0x0001,  0x0001,  0x4941,  0x4943,  0x30c1,  0x38c1,  0x38c1,  0x38c1,  0xa45b,  0xa45b,  0x3081,  0x0001,  0x0800,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0x9c5e,  0x0001,  0x1001,  0x5143,  0x4103,  0x30c1,  0x38c1,  0x38c1,  0x38c1,  0xa45b,  0xa45b,  0x4103,  0x4103,  0x2841,  0x4101,  0x4103,  0x38c1,  0x38c1,  0x3901,  0x38c1,  0x38c1,  0xa45b,  0xa45b,  0x5143,  0x3901,  0x0001,  0x7312,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xce70,  0x0001,  0x1001,  0x5983,  0x3903,  0x3901,  0x3903,  0x40c1,  0x3901,  0x3901,  0xa45b,  0xa45b,  0x38c1,  0x3903,  0x3901,  0x4103,  0x38c1,  0x38c1,  0x3901,  0x30c1,  0x4941,  0x40c1,  0xa45b,  0xa45b,  0x4103,  0x5983,  0x1801,  0x0001,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0x0001,  0x0001,  0x6203,  0x4103,  0x4141,  0x3041,  0x38c1,  0x4943,  0x2003,  0x38c1,  0xa45b,  0xa45b,  0x38c1,  0x4101,  0x4103,  0x3901,  0x38c1,  0x4943,  0x2841,  0x1001,  0x3881,  0x3001,  0x0001,  0x0001,  0x1801,  0x3901,  0x5983,  0x0001,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0x61c3,  0x1801,  0x0001,  0x0001,  0x0001,  0x3841,  0x0801,  0x0001,  0x2001,  0x5141,  0x3841,  0x1001,  0x2001,  0x4941,  0x2001,  0x0801,  0x2801,  0x4085,  0x93c1,  0x0001,  0x4a13,  0xfff9,  0xa45d,  0x0001,  0x0001,  0x0001,  0x6181,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x5901,  0x0801,  0x0001,  0x38c1,  0xb523,  0xffff,  0x5b27,  0x0001,  0xffc1,  0x4a4d,  0x0001,  0x28c3,  0x830f,  0x0001,  0x0001,  0x0001,  0xbda7,  0x0001,  0x008b,  0xffc9,  0x6341,  0x0007,  0xffff,  0xffff,  0xffff,  0xffff,  0x2881,  0x0001,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0x3149,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x52c1,  0xffc5,  0x000f,  0x0001,  0x4b1d,  0xffff,  0xffff,  0x0001,  0xffff,  0xffff,  0x0001,  0x0001,  0x9c8d,  0xffc1,  0x0001,  0xf7ff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0xf7ff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0xe681,  0xffc5,  0x000f,  0x0001,  0x0001,  0x088f,  0x0001,  0x18c1,  0x0003,  0x0001,  0x0001,  0x1087,  0x420d,  0xffc1,  0x0001,  0x2157,  0xffff,  0xffff,  0xffff,  0xffff,  0x0845,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0xffc1,  0xffc1,  0x0011,  0x0849,  0x0001,  0x0001,  0x1081,  0x2107,  0x20c1,  0x0001,  0x0001,  0x0011,  0x6b09,  0xffc1,  0x0001,  0x2119,  0xffff,  0xffff,  0xffff,  0xffff,  0xce73,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x8381,  0xffc1,  0xbd45,  0x0011,  0x18d3,  0xef0b,  0x39c1,  0x0001,  0x8c45,  0x944f,  0x0011,  0x184d,  0xffc1,  0xffc1,  0x0001,  0x5adf,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0xffc1,  0xffc1,  0xffc1,  0xffc1,  0x5a81,  0x0001,  0x0001,  0x0003,  0xffc1,  0xffc1,  0xffc1,  0xffc1,  0x9c41,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xdef3,  0x0001,  0x0001,  0x9c81,  0x5ac1,  0x0001,  0x0025,  0x210f,  0x94a1,  0x0017,  0x0001,  0x0001,  0xad41,  0x41c1,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0xad6b,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xfffd,  0x0001,  0x0001,  0x0001,  0xef7f,  0xffff,  0x0001,  0xfffe,  0x0001,  0xffff,  0x0017,  0x0001,  0x0001,  0x3193,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x5ad7,  0x0001,  0xfffe,  
    0xfffe,  0x0001,  0x0001,  0x0843,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0xfffe,  0x0001,  0xfffd,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0xfffe,  
    0xfffe,  0xbdee,  0x0001,  0x0001,  0x8c63,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x420f,  0x0001,  0xfffe,  0xfffe,  0xb5ac,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x0001,  0x0001,  0x0001,  0xfffe,  
    0xfffe,  0xfffe,  0x0001,  0x0001,  0x0001,  0xbdef,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x39cf,  0x0001,  0x7bde,  0xfffe,  0xfffe,  0xfffe,  0x0001,  0x0001,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0xffff,  0x318d,  0x0001,  0x0001,  0xd6b4,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0x0001,  0x0001,  0x0001,  0x0001,  0x18c7,  0x94a5,  0x6b5b,  0x0001,  0x0001,  0x0001,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0x0001,  0x0001,  0x0001,  0x4a53,  0x8c63,  0x6319,  0x0001,  0x0001,  0x0001,  0x0001,  0x4a52,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0x2108,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x294a,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xb5ac,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0x0001,  0xe738,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
    0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  0xfffe,  
};

static Vtx vtx_b_head[] = {
	{      8,     86,     22,    0, 1292, 1620,   -56,   94,   63,0}, 
	{      1,     77,     65,    0, 1984, 1676,   -78,   77,   62,0}, 
	{     89,     76,     57,    0, 1892,  256,    15,  110,   59,0}, 
	{     89,     76,    -56,    0,   72,  280,    25,  104,  -67,0}, 
	{     40,     94,      0,    0,  956, 1164,    55,  114,    0,0}, 
	{     89,     76,     57,    0, 1892,  256,    15,  110,   59,0}, 
	{      8,     86,    -21,    0,  596, 1628,   -41,   91,  -77,0}, 
	{     40,     94,      0,    0,  956, 1164,    55,  114,    0,0}, 
	{     89,     76,    -56,    0,   72,  280,    25,  104,  -67,0}, 
	{     89,     76,    -56,    0,   72,  280,    25,  104,  -67,0}, 
	{      1,     77,    -64,    0, -100, 1704,   -95,   70,  -44,0}, 
	{      8,     86,    -21,    0,  596, 1628,   -41,   91,  -77,0}, 
	{      8,     86,     22,    0, 1292, 1620,   -56,   94,   63,0}, 
	{     89,     76,     57,    0, 1892,  256,    15,  110,   59,0}, 
	{     40,     94,      0,    0,  956, 1164,    55,  114,    0,0}, 
	{     39,    120,      0,    0,    0,    0,    73,  103,   -2,0}, 
	{    -10,    111,      0,    0,    0,    0,  -108,   65,   -1,0}, 
	{      8,     86,     22,    0,    0,    0,   -56,   94,   63,0}, 
	{      8,     86,     22,    0,    0,    0,   -56,   94,   63,0}, 
	{     40,     94,      0,    0,    0,    0,    55,  114,    0,0}, 
	{     39,    120,      0,    0,    0,    0,    73,  103,   -2,0}, 
	{      8,     86,    -21,    0,    0,    0,   -41,   91,  -77,0}, 
	{     39,    120,      0,    0,    0,    0,    73,  103,   -2,0}, 
	{     40,     94,      0,    0,    0,    0,    55,  114,    0,0}, 
	{      8,     86,    -21,    0,    0,    0,   -41,   91,  -77,0}, 
	{    -10,    111,      0,    0,    0,    0,  -108,   65,   -1,0}, 
	{     39,    120,      0,    0,    0,    0,    73,  103,   -2,0}, 
	{      8,     86,    -21,    0,    0,    0,   -41,   91,  -77,0}, 
	{      8,     86,     22,    0,    0,    0,   -56,   94,   63,0}, 
	{    -10,    111,      0,    0,    0,    0,  -108,   65,   -1,0}, 
	{     -8,    -82,     44,    0,    0,    0,  -115,  -49,   14,0}, 
	{     -8,    -82,    -43,    0,    0,    0,   -92,  -85,  -15,0}, 
	{     69,    -83,     35,    0,    0,    0,    38, -116,   32,0}, 
	{     -8,    -82,    -43,    0,    0,    0,   -92,  -85,  -15,0}, 
	{     69,    -83,    -34,    0,    0,    0,    37, -112,  -45,0}, 
	{     69,    -83,     35,    0,    0,    0,    38, -116,   32,0}, 
	{      1,     77,    -64,    0,    0,    0,   -95,   70,  -44,0}, 
	{     -8,    -82,    -43,    0,    0,    0,   -92,  -85,  -15,0}, 
	{     -8,    -82,     44,    0,    0,    0,  -115,  -49,   14,0}, 
	{     69,    -83,    -34,    0,    0,    0,    37, -112,  -45,0}, 
	{     -8,    -82,    -43,    0,    0,    0,   -92,  -85,  -15,0}, 
	{     -3,    -55,    -96,    0,    0,    0,    -8,  -55, -114,0}, 
	{     -3,     33,    -87,    0,    0,    0,   -80,   30,  -93,0}, 
	{     -3,    -55,    -96,    0,    0,    0,    -8,  -55, -114,0}, 
	{     -8,    -82,    -43,    0,    0,    0,   -92,  -85,  -15,0}, 
	{     -8,    -82,    -43,    0,    0,    0,   -92,  -85,  -15,0}, 
	{      1,     77,    -64,    0,    0,    0,   -95,   70,  -44,0}, 
	{     -3,     33,    -87,    0,    0,    0,   -80,   30,  -93,0}, 
	{    122,    -45,    -35,    0,    0,    0,   102,  -69,  -30,0}, 
	{     69,    -83,    -34,    0,    0,    0,    37, -112,  -45,0}, 
	{     81,    -44,    -72,    0,    0,    0,    59,  -45, -102,0}, 
	{     81,    -44,    -72,    0,    0,    0,    59,  -45, -102,0}, 
	{     69,    -83,    -34,    0,    0,    0,    37, -112,  -45,0}, 
	{     -3,    -55,    -96,    0,    0,    0,    -8,  -55, -114,0}, 
	{     69,    -83,     35,    0,    0,    0,    38, -116,   32,0}, 
	{     69,    -83,    -34,    0,    0,    0,    37, -112,  -45,0}, 
	{    122,    -45,    -35,    0,    0,    0,   102,  -69,  -30,0}, 
	{     -3,    -55,     97,    0,    0,    0,    -8,  -55,  114,0}, 
	{     69,    -83,     35,    0,    0,    0,    38, -116,   32,0}, 
	{     81,    -44,     73,    0,    0,    0,    59,  -45,  102,0}, 
	{     81,    -44,     73,    0,    0,    0,    59,  -45,  102,0}, 
	{     69,    -83,     35,    0,    0,    0,    38, -116,   32,0}, 
	{    122,    -45,     36,    0,    0,    0,    96,  -67,   45,0}, 
	{    122,    -45,     36,    0,    0,    0,    96,  -67,   45,0}, 
	{     69,    -83,     35,    0,    0,    0,    38, -116,   32,0}, 
	{    122,    -45,    -35,    0,    0,    0,   102,  -69,  -30,0}, 
	{     -3,    -55,     97,    0,    0,    0,    -8,  -55,  114,0}, 
	{     -8,    -82,     44,    0,    0,    0,  -115,  -49,   14,0}, 
	{     69,    -83,     35,    0,    0,    0,    38, -116,   32,0}, 
	{    135,     24,    -43,    0,    0,    0,   101,    5,  -75,0}, 
	{    131,     93,    -14,    0,    0,    0,    76,   96,  -30,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{    135,     24,    -43,    0,    0,    0,   101,    5,  -75,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{    122,    -45,    -35,    0,    0,    0,   102,  -69,  -30,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{    122,    -45,     36,    0,    0,    0,    96,  -67,   45,0}, 
	{    122,    -45,    -35,    0,    0,    0,   102,  -69,  -30,0}, 
	{     81,    -44,     73,    0,    0,    0,    59,  -45,  102,0}, 
	{    122,    -45,     36,    0,    0,    0,    96,  -67,   45,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{    135,     24,    -43,    0,    0,    0,   101,    5,  -75,0}, 
	{    122,    -45,    -35,    0,    0,    0,   102,  -69,  -30,0}, 
	{     81,    -44,    -72,    0,    0,    0,    59,  -45, -102,0}, 
	{    131,     93,     15,    0,    0,    0,    79,   86,   47,0}, 
	{     89,     76,     57,    0,    0,    0,    15,  110,   59,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{     81,    -44,     73,    0,    0,    0,    59,  -45,  102,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{     86,     27,     73,    0,    0,    0,    37,   22,  119,0}, 
	{     86,     27,     73,    0,    0,    0,    37,   22,  119,0}, 
	{      1,     77,     65,    0,    0,    0,   -78,   77,   62,0}, 
	{     -3,     33,     88,    0,    0,    0,   -80,   30,   93,0}, 
	{     -3,     33,     88,    0,    0,    0,   -80,   30,   93,0}, 
	{     -3,    -55,     97,    0,    0,    0,    -8,  -55,  114,0}, 
	{     86,     27,     73,    0,    0,    0,    37,   22,  119,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{     89,     76,     57,    0,    0,    0,    15,  110,   59,0}, 
	{     86,     27,     73,    0,    0,    0,    37,   22,  119,0}, 
	{     -3,    -55,     97,    0,    0,    0,    -8,  -55,  114,0}, 
	{     81,    -44,     73,    0,    0,    0,    59,  -45,  102,0}, 
	{     86,     27,     73,    0,    0,    0,    37,   22,  119,0}, 
	{     86,     27,     73,    0,    0,    0,    37,   22,  119,0}, 
	{     89,     76,     57,    0,    0,    0,    15,  110,   59,0}, 
	{      1,     77,     65,    0,    0,    0,   -78,   77,   62,0}, 
	{     89,     76,     57,    0,    0,    0,    15,  110,   59,0}, 
	{    131,     93,    -14,    0,    0,    0,    76,   96,  -30,0}, 
	{     89,     76,    -56,    0,    0,    0,    25,  104,  -67,0}, 
	{     89,     76,     57,    0,    0,    0,    15,  110,   59,0}, 
	{    131,     93,     15,    0,    0,    0,    79,   86,   47,0}, 
	{    131,     93,    -14,    0,    0,    0,    76,   96,  -30,0}, 
	{      1,     77,     65,    0,    0,    0,   -78,   77,   62,0}, 
	{      8,     86,     22,    0,    0,    0,   -56,   94,   63,0}, 
	{      1,     77,    -64,    0,    0,    0,   -95,   70,  -44,0}, 
	{      1,     77,     65,    0,    0,    0,   -78,   77,   62,0}, 
	{      1,     77,    -64,    0,    0,    0,   -95,   70,  -44,0}, 
	{     -8,    -82,     44,    0,    0,    0,  -115,  -49,   14,0}, 
	{     -3,     33,     88,    0,    0,    0,   -80,   30,   93,0}, 
	{      1,     77,     65,    0,    0,    0,   -78,   77,   62,0}, 
	{     -8,    -82,     44,    0,    0,    0,  -115,  -49,   14,0}, 
	{    131,     93,    -14,    0,    0,    0,    76,   96,  -30,0}, 
	{    131,     93,     15,    0,    0,    0,    79,   86,   47,0}, 
	{    135,     24,     44,    0,    0,    0,   113,    1,   57,0}, 
	{     -8,    -82,     44,    0,    0,    0,  -115,  -49,   14,0}, 
	{     -3,    -55,     97,    0,    0,    0,    -8,  -55,  114,0}, 
	{     -3,     33,     88,    0,    0,    0,   -80,   30,   93,0}, 
	{    135,     24,    -43,    0,    0,    0,   101,    5,  -75,0}, 
	{     89,     76,    -56,    0,    0,    0,    25,  104,  -67,0}, 
	{    131,     93,    -14,    0,    0,    0,    76,   96,  -30,0}, 
	{     -3,     33,    -87,    0,    0,    0,   -80,   30,  -93,0}, 
	{      1,     77,    -64,    0,    0,    0,   -95,   70,  -44,0}, 
	{     86,     27,    -72,    0,    0,    0,    37,   22, -119,0}, 
	{      8,     86,     22,    0,    0,    0,   -56,   94,   63,0}, 
	{      8,     86,    -21,    0,    0,    0,   -41,   91,  -77,0}, 
	{      1,     77,    -64,    0,    0,    0,   -95,   70,  -44,0}, 
	{      1,     77,    -64,    0,    0,    0,   -95,   70,  -44,0}, 
	{     89,     76,    -56,    0,    0,    0,    25,  104,  -67,0}, 
	{     86,     27,    -72,    0,    0,    0,    37,   22, -119,0}, 
	{     86,     27,    -72,    0,    0,    0,    37,   22, -119,0}, 
	{     89,     76,    -56,    0,    0,    0,    25,  104,  -67,0}, 
	{    135,     24,    -43,    0,    0,    0,   101,    5,  -75,0}, 
	{     -3,    -55,    -96,    0,    0,    0,    -8,  -55, -114,0}, 
	{     86,     27,    -72,    0,    0,    0,    37,   22, -119,0}, 
	{     81,    -44,    -72,    0,    0,    0,    59,  -45, -102,0}, 
	{     86,     27,    -72,    0,    0,    0,    37,   22, -119,0}, 
	{    135,     24,    -43,    0,    0,    0,   101,    5,  -75,0}, 
	{     81,    -44,    -72,    0,    0,    0,    59,  -45, -102,0}, 
	{     -3,    -55,    -96,    0,    0,    0,    -8,  -55, -114,0}, 
	{     -3,     33,    -87,    0,    0,    0,   -80,   30,  -93,0}, 
	{     86,     27,    -72,    0,    0,    0,    37,   22, -119,0}, 
};

static Gfx gfx_b_head_0[] = {
	gsDPLoadTextureBlock(b_eye_txt,G_IM_FMT_RGBA,G_IM_SIZ_16b,32,32,0,G_TX_WRAP|G_TX_NOMIRROR,G_TX_WRAP|G_TX_NOMIRROR,
					5,5,G_TX_NOLOD ,G_TX_NOLOD ),

	gsSPLight((&light_b_head[0].l[0]),1 ),
	gsSPLight((&light_b_head[0].a   ),2 ),

	gsSPVertex(&vtx_b_head[0], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPEndDisplayList() 
};

static Gfx gfx_b_head_1[] = {

	gsSPLight((&light_b_head[1].l[0]),1 ),
	gsSPLight((&light_b_head[1].a   ),2 ),

	gsSPVertex(&vtx_b_head[15], 12, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),

	gsSPLight((&light_b_head[2].l[0]),1 ),
	gsSPLight((&light_b_head[2].a   ),2 ),

	gsSPVertex(&vtx_b_head[27],  3, 0), 
	gsSP1Triangle( 0, 1, 2, 0),

	gsSPLight((&light_b_head[0].l[0]),1 ),
	gsSPLight((&light_b_head[0].a   ),2 ),

	gsSPVertex(&vtx_b_head[30], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPVertex(&vtx_b_head[45], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPVertex(&vtx_b_head[60], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPVertex(&vtx_b_head[75], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPVertex(&vtx_b_head[90], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPVertex(&vtx_b_head[105], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPVertex(&vtx_b_head[120], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPVertex(&vtx_b_head[135], 15, 0), 
	gsSP1Triangle( 0, 1, 2, 0),
	gsSP1Triangle( 3, 4, 5, 0),
	gsSP1Triangle( 6, 7, 8, 0),
	gsSP1Triangle( 9,10,11, 0),
	gsSP1Triangle(12,13,14, 0),
	gsSPEndDisplayList() 
};

Gfx gfx_b_head[] = {
	gsDPPipeSync(),
	gsDPSetCombineMode(G_CC_BLENDRGBA, G_CC_BLENDRGBA),
	gsSPTexture(0x8000,0x8000, 0, G_TX_RENDERTILE, G_ON),

		gsSPDisplayList(gfx_b_head_0),

	gsSPTexture(0x8000, 0x8000, 1, 1, 0),

	gsDPPipeSync(),
	gsDPSetCombineMode(G_CC_SHADE, G_CC_SHADE),

		gsSPDisplayList(gfx_b_head_1),

	gsSPEndDisplayList() 
};

